BUILD   := <%= BUILD %>
SRC     := <%= SRC %>
PREFIX  := <%= PREFIX %>

TARGETS  := ${SRC}/libgpgme_gem.so ${SRC}/../../lib/gpgme/ffi/enums.rb

GPG_ERROR := libgpg-error-1.10
ASSUAN    := libassuan-2.0.2
GPGME     := gpgme-1.3.1

COMMON_FLAGS    := --prefix=${PREFIX} --disable-shared --enable-static --with-pic
GPG_ERROR_FLAGS := --disable-nls
ASSUAN_FLAGS    := --with-gpg-error-prefix=${PREFIX}
GPGME_FLAGS     := --with-gpg-error-prefix=${PREFIX} --with-libassuan-prefix=${PREFIX}

all: ${BUILD}/libgpgme_gem.so ${BUILD}/enums.rb

clean:
	rm -f ${BUILD}/libgpgme_gem.so ${BUILD}/enums.rb

${BUILD}/libgpgme_gem.so: ${BUILD}/libgpgme_ext.a ${BUILD}/libgpg-error_ext.a ${BUILD}/libassuan_ext.a
	gcc -s -shared -o $@ -Wl,--whole-archive ${BUILD}/libgpgme_ext.a -Wl,--no-whole-archive ${BUILD}/libgpg-error_ext.a ${BUILD}/libassuan_ext.a

${BUILD}/%_ext.a: ${PREFIX}/lib/%.a
	cp $< $@

${PREFIX}/lib/libgpgme.a ${GPGME}/src/gpgme.h: ${SRC}/${GPGME}.tar.bz2 ${PREFIX}/lib/libassuan.a ${PREFIX}/lib/libgpg-error.a
	tar xf $< -C ${BUILD}
	cd ${GPGME} && ./configure ${COMMON_FLAGS} ${GPGME_FLAGS}
	${MAKE} -C ${GPGME} install

${PREFIX}/lib/libassuan.a: ${SRC}/${ASSUAN}.tar.bz2 ${PREFIX}/lib/libgpg-error.a
	tar xf $< -C ${BUILD}
	cd ${ASSUAN} && ./configure ${COMMON_FLAGS} ${ASSUAN_FLAGS}
	${MAKE} -C ${ASSUAN} install

${PREFIX}/lib/libgpg-error.a ${GPG_ERROR}/src/gpg-error.h: ${SRC}/${GPG_ERROR}.tar.bz2
	tar xf $< -C ${BUILD}
	cd ${GPG_ERROR} && ./configure ${COMMON_FLAGS} ${GPG_ERROR_FLAGS}
	${MAKE} -C ${GPG_ERROR} install

${BUILD}/enums.rb: ${SRC}/extract_enums.rb ${GPG_ERROR}/src/gpg-error.h ${GPGME}/src/gpgme.h
	ruby -- $^ $@

install: all
	if [ "${SRC}" != "${BUILD}" ]; then \
		cp ${BUILD}/libgpgme_gem.so ${SRC}/libgpgme_gem.so; \
	fi
	cp ${BUILD}/enums.rb ${SRC}/../../lib/gpgme/ffi/enums.rb

uninstall:
	if [ "${SRC}" != "${BUILD}" ]; then \
		rm -f ${SRC}/libgpgme_gem.so; \
	fi
	rm -f ${SRC}/../../lib/gpgme/ffi/enums.rb